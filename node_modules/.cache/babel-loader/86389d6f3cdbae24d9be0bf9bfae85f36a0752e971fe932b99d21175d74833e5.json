{"ast":null,"code":"var _jsxFileName = \"D:\\\\music-app\\\\frontend\\\\src\\\\components\\\\MusicPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Form, ListGroup, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MusicPlayer() {\n  _s();\n  const [search, setSearch] = useState('');\n  const [results, setResults] = useState([]);\n  const [currentPreview, setCurrentPreview] = useState(null);\n  const searchSongs = async () => {\n    const res = await fetch(`https://api.deezer.com/search?q=${search}`);\n    const data = await res.json();\n    setResults(data.data || []);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFB6 Stream Music Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      placeholder: \"Search for a song...\",\n      value: search,\n      onChange: e => setSearch(e.target.value),\n      onKeyDown: e => e.key === 'Enter' && searchSongs(),\n      className: \"my-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: searchSongs,\n      variant: \"primary\",\n      className: \"mb-3\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: results.map((track, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        className: \"d-flex justify-content-between align-items-center\",\n        children: [track.title, \" - \", track.artist.name, /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-success\",\n          size: \"sm\",\n          onClick: () => setCurrentPreview(track.preview),\n          children: \"\\u25B6\\uFE0F Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), currentPreview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        autoPlay: true,\n        src: currentPreview,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(MusicPlayer, \"USmFpUHKArICDJx/tvwMtrgnfdE=\");\n_c = MusicPlayer;\nexport default MusicPlayer;\nvar _c;\n$RefreshReg$(_c, \"MusicPlayer\");","map":{"version":3,"names":["React","useState","Container","Form","ListGroup","Button","jsxDEV","_jsxDEV","MusicPlayer","_s","search","setSearch","results","setResults","currentPreview","setCurrentPreview","searchSongs","res","fetch","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","variant","map","track","index","Item","title","artist","name","size","preview","controls","autoPlay","src","style","width","_c","$RefreshReg$"],"sources":["D:/music-app/frontend/src/components/MusicPlayer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Container, Form, ListGroup, Button } from 'react-bootstrap';\r\n\r\nfunction MusicPlayer() {\r\n  const [search, setSearch] = useState('');\r\n  const [results, setResults] = useState([]);\r\n  const [currentPreview, setCurrentPreview] = useState(null);\r\n\r\n  const searchSongs = async () => {\r\n    const res = await fetch(`https://api.deezer.com/search?q=${search}`);\r\n    const data = await res.json();\r\n    setResults(data.data || []);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <h2>üé∂ Stream Music Preview</h2>\r\n      <Form.Control\r\n        type=\"text\"\r\n        placeholder=\"Search for a song...\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        onKeyDown={(e) => e.key === 'Enter' && searchSongs()}\r\n        className=\"my-3\"\r\n      />\r\n      <Button onClick={searchSongs} variant=\"primary\" className=\"mb-3\">\r\n        Search\r\n      </Button>\r\n\r\n      <ListGroup>\r\n        {results.map((track, index) => (\r\n          <ListGroup.Item\r\n            key={index}\r\n            className=\"d-flex justify-content-between align-items-center\"\r\n          >\r\n            {track.title} - {track.artist.name}\r\n            <Button\r\n              variant=\"outline-success\"\r\n              size=\"sm\"\r\n              onClick={() => setCurrentPreview(track.preview)}\r\n            >\r\n              ‚ñ∂Ô∏è Play\r\n            </Button>\r\n          </ListGroup.Item>\r\n        ))}\r\n      </ListGroup>\r\n\r\n      {currentPreview && (\r\n        <div className=\"mt-4\">\r\n          <audio controls autoPlay src={currentPreview} style={{ width: '100%' }} />\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MusicPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}